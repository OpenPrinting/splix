%!PS-Adobe-2.0 EPSF-2.0
%%Title: bande.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5-alpha5
%%CreationDate: Sat Aug 26 01:43:37 2006
%%For: aurelien@astate.ap2c.org (Aur√©lien Croc)
%%BoundingBox: 0 0 203 345
%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 345 moveto 0 0 lineto 203 0 lineto 203 345 lineto closepath clip newpath
-41.8 406.1 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 52
% Polyline
0 slj
0 slc
7.500 slw
n 3735 4590 m 1350 4590 l 1350 5355 l 3735 5355 l 3285 5220 l 3645 5085 l
 3330 4950 l 3690 4815 l 3375 4770 l 3735 4590 l
 cp gs col11 1.00 shd ef gr gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
n 1395 5895 m 1485 5895 l 1485 5985 l 1395 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1530 5895 m 1620 5895 l 1620 5985 l 1530 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1665 5895 m 1755 5895 l 1755 5985 l 1665 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 5895 m 1890 5895 l 1890 5985 l 1800 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1935 5895 m 2025 5895 l 2025 5985 l 1935 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2070 5895 m 2160 5895 l 2160 5985 l 2070 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2205 5895 m 2295 5895 l 2295 5985 l 2205 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2340 5895 m 2430 5895 l 2430 5985 l 2340 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2475 5895 m 2565 5895 l 2565 5985 l 2475 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2610 5895 m 2700 5895 l 2700 5985 l 2610 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2745 5895 m 2835 5895 l 2835 5985 l 2745 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3015 5895 m 3105 5895 l 3105 5985 l 3015 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3150 5895 m 3240 5895 l 3240 5985 l 3150 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3285 5895 m 3375 5895 l 3375 5985 l 3285 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3420 5895 m 3510 5895 l 3510 5985 l 3420 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3555 5895 m 3645 5895 l 3645 5985 l 3555 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3690 5895 m 3780 5895 l 3780 5985 l 3690 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1350 5850 m 3870 5850 l 3870 6030 l 1350 6030 l
 cp gs col0 s gr 
% Polyline
n 2880 5895 m 2970 5895 l 2970 5985 l 2880 5985 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1350 990 m 3420 990 l 3420 4005 l 1350 4005 l
 cp gs col0 s gr 
% Polyline
n 1350 1845 m 3420 1845 l 3420 1935 l 1350 1935 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 90.00 123.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1440 4680 m 1530 4680 l 1530 4770 l 1440 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1620 4680 m 1710 4680 l 1710 4770 l 1620 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 4680 m 1890 4680 l 1890 4770 l 1800 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1980 4680 m 2070 4680 l 2070 4770 l 1980 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2160 4680 m 2250 4680 l 2250 4770 l 2160 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2340 4680 m 2430 4680 l 2430 4770 l 2340 4770 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2340 4815 m 2430 4815 l 2430 4905 l 2340 4905 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2340 4950 m 2430 4950 l 2430 5040 l 2340 5040 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2340 5085 m 2430 5085 l 2430 5175 l 2340 5175 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2340 5220 m 2430 5220 l 2430 5310 l 2340 5310 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 1440 4815 m 1530 4815 l 1530 4905 l 1440 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1440 4950 m 1530 4950 l 1530 5040 l 1440 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1440 5085 m 1530 5085 l 1530 5175 l 1440 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1440 5220 m 1530 5220 l 1530 5310 l 1440 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1620 4815 m 1710 4815 l 1710 4905 l 1620 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1620 4950 m 1710 4950 l 1710 5040 l 1620 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1620 5085 m 1710 5085 l 1710 5175 l 1620 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1620 5220 m 1710 5220 l 1710 5310 l 1620 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 4815 m 1890 4815 l 1890 4905 l 1800 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 4950 m 1890 4950 l 1890 5040 l 1800 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 5085 m 1890 5085 l 1890 5175 l 1800 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1800 5220 m 1890 5220 l 1890 5310 l 1800 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1980 4815 m 2070 4815 l 2070 4905 l 1980 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1980 4950 m 2070 4950 l 2070 5040 l 1980 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1980 5085 m 2070 5085 l 2070 5175 l 1980 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1980 5220 m 2070 5220 l 2070 5310 l 1980 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2160 4815 m 2250 4815 l 2250 4905 l 2160 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2160 4950 m 2250 4950 l 2250 5040 l 2160 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2160 5085 m 2250 5085 l 2250 5175 l 2160 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2160 5220 m 2250 5220 l 2250 5310 l 2160 5310 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2520 4680 m 2610 4680 l 2610 4770 l 2520 4770 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2520 4815 m 2610 4815 l 2610 4905 l 2520 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2520 4950 m 2610 4950 l 2610 5040 l 2520 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2520 5085 m 2610 5085 l 2610 5175 l 2520 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2520 5220 m 2610 5220 l 2610 5310 l 2520 5310 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2880 4950 m 2970 4950 l 2970 5040 l 2880 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2880 4815 m 2970 4815 l 2970 4905 l 2880 4905 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2880 4680 m 2970 4680 l 2970 4770 l 2880 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2700 4680 m 2790 4680 l 2790 4770 l 2700 4770 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 2700 4815 m 2790 4815 l 2790 4905 l 2700 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2700 4950 m 2790 4950 l 2790 5040 l 2700 5040 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2880 5085 m 2970 5085 l 2970 5175 l 2880 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2700 5085 m 2790 5085 l 2790 5175 l 2700 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2880 5220 m 2970 5220 l 2970 5310 l 2880 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2700 5220 m 2790 5220 l 2790 5310 l 2700 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3060 4815 m 3150 4815 l 3150 4905 l 3060 4905 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3060 4950 m 3150 4950 l 3150 5040 l 3060 5040 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3060 5085 m 3150 5085 l 3150 5175 l 3060 5175 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3060 5220 m 3150 5220 l 3150 5310 l 3060 5310 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3240 5220 m 3330 5220 l 3330 5310 l 3240 5310 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3240 4950 m 3330 4950 l 3330 5040 l 3240 5040 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3240 4680 m 3330 4680 l 3330 4770 l 3240 4770 l
 cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 3060 4680 m 3150 4680 l 3150 4770 l 3060 4770 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3240 4815 m 3330 4815 l 3330 4905 l 3240 4905 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3240 5085 m 3330 5085 l 3330 5175 l 3240 5175 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
1146 5040 m 1365 5040 l 1365 4950 l 1146 4950 l 1146 4950 l 1296 4995 l 1146 5040 l cp
eoclip
n 1350 1890 m 675 1890 l 675 4995 l
 1350 4995 l gs col0 s gr gr

% arrowhead
15.000 slw
n 1146 5040 m 1296 4995 l 1146 4950 l 1176 4995 l 1146 5040 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
1605 6137 m 1605 5970 l 1545 5970 l 1545 6137 l 1545 6137 l 1575 6017 l 1605 6137 l cp
eoclip
n 1440 4860 m 1125 4860 l 1125 6255 l 1575 6255 l
 1575 5985 l gs col9 s gr gr

% arrowhead
n 1605 6137 m 1575 6017 l 1545 6137 l 1605 6137 l  cp gs col9 1.00 shd ef gr  col9 s
% Polyline
gs  clippath
2145 6137 m 2145 5970 l 2085 5970 l 2085 6137 l 2085 6137 l 2115 6017 l 2145 6137 l cp
eoclip
n 1665 4680 m 1665 4500 l 1035 4500 l 1035 6435 l 2115 6435 l 2115 6435 l

 2115 5985 l gs col20 s gr gr

% arrowhead
n 2145 6137 m 2115 6017 l 2085 6137 l 2145 6137 l  cp gs col20 1.00 shd ef gr  col20 s
% Polyline
gs  clippath
1410 5743 m 1410 5910 l 1470 5910 l 1470 5743 l 1470 5743 l 1440 5863 l 1410 5743 l cp
eoclip
n 1440 4725 m 1215 4725 l 1215 5580 l 1440 5580 l
 1440 5895 l gs col12 s gr gr

% arrowhead
n 1410 5743 m 1440 5863 l 1470 5743 l 1410 5743 l  cp gs col12 1.00 shd ef gr  col12 s
% Polyline
gs  clippath
1950 5743 m 1950 5910 l 2010 5910 l 2010 5743 l 2010 5743 l 1980 5863 l 1950 5743 l cp
eoclip
n 1485 5310 m 1485 5490 l 1980 5490 l
 1980 5895 l gs col22 s gr gr

% arrowhead
n 1950 5743 m 1980 5863 l 2010 5743 l 1950 5743 l  cp gs col22 1.00 shd ef gr  col22 s
/Times-Roman ff 190.50 scf sf
2070 1305 m
gs 1 -1 sc (M. Tartempion) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 1845 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 2070 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 2295 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 2520 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 2745 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 3195 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 3420 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 3645 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 3870 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 2970 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
/Times-Roman ff 190.50 scf sf
1530 1620 m
gs 1 -1 sc (Bla bla bla bla bla bla) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%Trailer
%EOF
